<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Analytics</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

</head>
<body onload="doTheFetch()">
    <nav class="navbar navbar-expand-lg bg-primary-subtle">
        <div class="container-fluid">
              <a class="navbar-brand" href="/">SimplyStocks</a>
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-arrow-up-right-square-fill" viewBox="0 0 16 16">
                <path d="M14 0a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zM5.904 10.803 10 6.707v2.768a.5.5 0 0 0 1 0V5.5a.5.5 0 0 0-.5-.5H6.525a.5.5 0 1 0 0 1h2.768l-4.096 4.096a.5.5 0 0 0 .707.707z"/>
              </svg>
              <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
              </button>
              <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                  <li class="nav-item">
                    <a class="nav-link active" aria-current="page" href="/">Home</a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" href="/stockForm">Stocks</a>
                  </li>
                  <li>
                    <a class="nav-link" href="/about">About</a>
                  </li>
                  <li>
                    <a class="nav-link" href="/analytics">Analytics</a>
                  </li>
                </ul>
                <span class="navbar-text">
                  Made by Shaurya Jain
                </span>
              </div>
            </div>
          </nav>
          <br>
            <div class="container">
                <div class="row">
                <div class="col">
                    <h1>Analytics</h1>
                </div>
                </div>
                <div class="row">
                <div class="col">
                    <h3>Start Investment</h3>
                    <p id="startInvestment"></p>
                </div>
                <div class="col">
                    <h3>End Investment</h3>
                    <p id="endInvestment"></p>
                </div>
                <div class="col">
                    <h3>Percent Change</h3>
                    <p id="percentChange"></p>
                </div>
                </div>
          <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
          <script>
            function delayedFetch(delay, link) {
            return new Promise((resolve, reject) => {
                setTimeout(async () => {
                try {
                    const response = await fetch(`http://localhost:8080`+link);
                    console.log(response)
                    resolve(response);
                } catch (error) {
                    reject(error);
                }
                }, delay);
            });
            }

            async function doTheFetch(){
                startCloses = []
                endCloses = []
                const response = await fetch('http://localhost:8080/forDBFetching')
                const data = await response.json()
                console.log(data)
                for(var i=0;i<data['links'].length;i++){
                    response2 = delayedFetch(15000,data['links'][i])
                    // console.log(response2)
                    // response2 = setTimeout(async ()=> await fetch('http://localhost:8080'+data['links'][i]),15000)
                    
                    startCloses.push(response2['close'][0])
                    endCloses.push(response2['close'][response2['close'].length-1])
                }
                startInvestment = 0
                endInvestment = 0
                for(var i=0;i<startCloses.length;i++){
                    startInvestment += startCloses[i]
                    endInvestment += endCloses[i]
                }
                percentChange = ((endInvestment-startInvestment)/startInvestment)*100
                document.innerHTML("startInvestment") = startInvestment
                document.innerHTML("endInvestment") = endInvestment
                document.innerHTML("percentChange")= percentChange


            }
          </script>
</body>
</html>